{"version":3,"sources":["logo.svg","modules/Configuration/section.js","modules/Configuration/index.js","modules/Posts/index.js","modules/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Section","props","state","buildInitialStateObject","initial_state","lang","inputs","forEach","value","index","input_name","e","this","setState","target","name","fetchData","fetch","section_name","then","res","json","result","properties","Object","assign","prop","undefined","hasOwnProperty","console","log","error","method","body","JSON","stringify","data","headers","element","Grid","item","xs","TextField","id","fullWidth","style","placeholder","label","variant","onChange","handleChange","push","Card","CardContent","CardActions","Button","color","onClick","updateSettings","React","Component","Configuration","classes","container","spacing","FormControl","InputLabel","Select","labelId","MenuItem","routeProps","path","exact","component","withStyles","theme","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","withTheme","StyledTableCell","head","backgroundColor","palette","common","black","white","TableCell","StyledTableRow","background","default","TableRow","createData","calories","fat","carbs","protein","Posts","page","twitter_id","validated","TableContainer","Paper","Table","className","table","aria-label","TableHead","align","TableBody","posts","map","row","key","scope","href","link","user","profile","twitter_name","created_at","$date","Checkbox","checked","inputProps","updatePost","App","useState","currentTab","setCurrentTab","src","logo","alt","modules","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d110ac54.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\n\nclass Section extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.buildInitialStateObject(this.props)\n    }\n\n    buildInitialStateObject(props) {\n        let initial_state = {'lang': props.lang}\n\n        props.inputs.forEach(function (value, index) {\n            initial_state[value.input_name] = ''\n        })\n\n        return initial_state\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData() {\n        fetch(\"http://localhost:5000/settings?name=\" + this.props.section_name)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    if (result[0]) {\n                        let properties = Object.assign({}, this.state, result[0]['data']);\n                        let lang = this.state.lang\n                        if (lang) {\n                            properties = properties[lang]\n\n                            if (properties === undefined) {\n                                properties = {}\n                            }\n                        }\n\n                        for (const prop in this.state) {\n                            if (!properties.hasOwnProperty(prop)) {\n                                properties[prop] = ''\n                            }\n                        }\n\n                        this.setState(properties)\n                    } else {\n                        console.log(\"No settings found for this key => \" + this.props.section_name)\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n    componentWillReceiveProps({lang}) {\n        this.setState({'lang': lang})\n        this.fetchData()\n    }\n\n    updateSettings() {\n        fetch(\"http://127.0.0.1:5000/settings\", {\n            method: 'POST',\n            body: JSON.stringify({\n                    name: this.props.section_name,\n                    lang: this.state.lang,\n                    data: this.state\n                }\n            ),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n    render() {\n        let inputs = []\n        this.props.inputs.forEach(function (value, index) {\n            let element = <Grid item xs={12}>\n                <TextField id={value.input_name}\n                           name={value.input_name}\n                           fullWidth\n                           style={{'marginBottom': '10px'}}\n                           placeholder={value.placeholder}\n                           label={value.placeholder}\n                           value={this.state[value.input_name]}\n                           variant=\"outlined\"\n                           onChange={(e) => {\n                               this.handleChange(e)\n                           }}/>\n            </Grid>\n            inputs.push(element)\n        }, this)\n\n        return (\n            <Card style={{'marginBottom': '50px'}}>\n                <CardContent>\n                    <Grid item xs={12}>\n                        <h3 style={{'margin-bottom': '20px'}}>Section: {this.props.section_name}</h3>\n                    </Grid>\n                    {inputs}\n                </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={(e) => {\n                        this.updateSettings(e)\n                    }}>\n                        Actualizar!\n                    </Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default Section","import React from 'react';\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Grid from '@material-ui/core/Grid';\nimport Section from \"./section\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst styles = theme => ({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n});\n\nclass Configuration extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {'lang': 'es'}\n    }\n\n    handleChange(e) {\n        this.setState({'lang': e.target.value})\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <h1 style={{'marginBottom': '30px'}}>Configuración de la landing</h1>\n                <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <FormControl>\n                            <InputLabel id=\"demo-simple-select-label\">Idioma</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                value={this.state.lang}\n                                onChange={(e) => {\n                                    this.handleChange(e)\n                                }}\n                            >\n                                <MenuItem value={'es'}>Es</MenuItem>\n                                <MenuItem value={'en'}>En</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"general\"}\n                            inputs={[{input_name: 'hashtag', placeholder: 'hashtag'}]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"opening\"}\n                            inputs={[\n                                {input_name: 'text_light', placeholder: 'Text Ligth'},\n                                {input_name: 'text_bold', placeholder: 'Text Bold'},\n                                {input_name: 'background_resource', placeholder: 'Background resource'}\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"share\"}\n                            inputs={[\n                                {input_name: 'text_bold', placeholder: 'Text Bold'},\n                                {input_name: 'text_left', placeholder: 'Text left'},\n                                {input_name: 'text_right', placeholder: 'Text right'},\n                                {input_name: 'show_more', placeholder: 'Show more'}\n\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"have_fun\"}\n                            inputs={[\n                                {input_name: 'text_bold', placeholder: 'Text Bold'}\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"community\"}\n                            inputs={[\n                                {input_name: 'text_bold', placeholder: 'Text Bold'}\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"popular\"}\n                            inputs={[\n                                {input_name: 'text_bold', placeholder: 'Text Bold'}\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"join_us\"}\n                            inputs={[\n                                {input_name: 'text_bold', placeholder: 'Text Bold'},\n                                {input_name: 'text_light', placeholder: 'Text light'},\n                                {input_name: 'button_text', placeholder: 'Button text'}\n                            ]}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Section\n                            lang={this.state.lang}\n                            section_name={\"follow_us\"}\n                            inputs={[\n                                {input_name: 'follow_text', placeholder: 'Follow text'}\n                            ]}\n                        />\n                    </Grid>\n                </Grid>\n                {/*<Card className={classes.root}>\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Word of the Day\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            be{bull}nev{bull}o{bull}lent\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                            adjective\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            well meaning and kindly.\n                            <br/>\n                            {'\"a benevolent smile\"'}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                    </CardActions>\n                </Card>\n\n                Configuration module\n\n                <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\"/>\n\n                <Button variant=\"contained\" color=\"primary\">\n                    Material button!\n                </Button>*/}\n            </div>\n        );\n    }\n}\n\nexport default {\n    routeProps: {\n        path: '/',\n        exact: true,\n        component: withStyles(styles, {withTheme: true})(Configuration)\n    },\n    name: 'Configuration',\n}","import React from 'react';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst StyledTableCell = withStyles(theme => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles(theme => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.background.default,\n        },\n    },\n}))(TableRow);\n\nconst useStyles = theme => ({\n    table: {},\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return {name, calories, fat, carbs, protein};\n}\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nclass Posts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {'posts': [], 'page': 1}\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData() {\n        fetch(\"http://localhost:5000/feed?page=\" + this.state.page)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result)\n                    this.setState({'posts': result, 'page': this.state.page++})\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n    updatePost(twitter_id, validated) {\n        fetch(\"http://localhost:5000/feed\", {\n            method: 'POST',\n            body: JSON.stringify({\n                    twitter_id: twitter_id,\n                    validated: validated\n                }\n            ),\n            headers: {'Content-Type': 'application/json'}\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result)\n                },\n                (error) => {\n                    console.log(error)\n                }\n            )\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <div>\n                <h3>Posts module</h3>\n\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"customized table\">\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell>Text</StyledTableCell>\n                                <StyledTableCell align=\"right\">Link</StyledTableCell>\n                                <StyledTableCell align=\"right\">User</StyledTableCell>\n                                <StyledTableCell align=\"right\">Creation Date</StyledTableCell>\n                                <StyledTableCell align=\"right\">Enabled</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.posts.map(row => (\n                                <StyledTableRow key={row.twitter_id}>\n                                    <StyledTableCell component=\"th\" scope=\"row\">\n                                        {row.title}\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"right\">\n                                        <a href={row.link}>Ver</a>\n                                    </StyledTableCell>\n                                    <StyledTableCell align=\"right\">{row.user.profile.twitter_name}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">{row.created_at.$date}</StyledTableCell>\n                                    <StyledTableCell align=\"right\">\n                                        <Checkbox\n                                            checked={row.validated}\n                                            color=\"primary\"\n                                            /*onChange={handleChange}*/\n                                            value=\"primary\"\n                                            inputProps={{'aria-label': 'primary checkbox'}}\n                                            onChange={this.updatePost(row.twitter_id, row.validated)}\n                                        />\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>\n        )\n    }\n}\n\nexport default {\n    routeProps: {\n        path: '/posts',\n        component: withStyles(useStyles, {withTheme: true})(Posts),\n    },\n    name: 'Posts',\n};\n","import Configuration from './Configuration';\nimport Posts from './Posts';\n\nexport default [\n    Configuration,\n    Posts\n];","import React from 'react';\nimport { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport modules from './modules'; // All the parent knows is that it has modules ...\n\nfunction App() {\n  const [currentTab, setCurrentTab] = useState('dashboard');\n\n  return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <ul className=\"App-nav\">\n              {modules.map(module => ( // with a name, and routes\n                  <li key={module.name} className={currentTab === module.name ? 'active' : ''}>\n                    <Link to={module.routeProps.path} onClick={() => setCurrentTab(module.name)}>{module.name}</Link>\n                  </li>\n              ))}\n            </ul>\n          </header>\n          <div className=\"App-content\">\n            {modules.map(module => (\n                <Route {...module.routeProps} key={module.name} />\n            ))}\n          </div>\n        </div>\n      </Router>\n  );\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}